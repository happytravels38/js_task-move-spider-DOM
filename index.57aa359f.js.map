{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAAM,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAS,SAAS,aAAa,CAAC,WAEtC,EAAK,gBAAgB,CAAC,QAAS,SAAC,CAAhC,EACE,IAAM,EAAW,EAAK,qBAAqB,GACrC,EAAa,EAAO,qBAAqB,GAEzC,EAAkB,EAAK,WAAW,CAClC,EAAmB,EAAK,YAAY,CAC1C,QAAQ,GAAG,CAAC,EAAiB,GAC7B,IAAI,EAAU,EAAE,OAAO,CAAG,EAAS,IAAI,CAAG,EAAW,KAAK,CAAG,EACzD,EAAS,EAAE,OAAO,CAAG,EAAS,GAAG,CAAG,EAAW,MAAM,CAAG,CAGxD,CAAA,EAAU,EACZ,EAAU,EACD,EAAU,EAAW,KAAK,CAAG,GACtC,CAAA,EAAU,EAAkB,EAAW,KAAK,AAAL,EAIrC,EAAS,EACX,EAAS,EACA,EAAS,EAAW,MAAM,CAAG,GACtC,CAAA,EAAS,EAAmB,EAAW,MAAM,AAAN,EAGzC,EAAO,KAAK,CAAC,QAAQ,CAAG,WACxB,EAAO,KAAK,CAAC,IAAI,CAAG,GAAW,MAAA,CAAR,EAAQ,MAC/B,EAAO,KAAK,CAAC,GAAG,CAAG,GAAU,MAAA,CAAP,EAAO,KAC/B,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var wall = document.querySelector(\".wall\");\n    var spider = document.querySelector(\".spider\");\n    wall.addEventListener(\"click\", function(e) {\n        var wallRect = wall.getBoundingClientRect();\n        var spiderRect = spider.getBoundingClientRect();\n        var wallClientWidth = wall.clientWidth;\n        var wallClientHeight = wall.clientHeight;\n        console.log(wallClientWidth, wallClientHeight);\n        var newLeft = e.clientX - wallRect.left - spiderRect.width / 2;\n        var newTop = e.clientY - wallRect.top - spiderRect.height / 2;\n        // Check boundaries for left and right\n        if (newLeft < 0) newLeft = 0;\n        else if (newLeft + spiderRect.width > wallClientWidth) newLeft = wallClientWidth - spiderRect.width;\n        // Check boundaries for top and bottom\n        if (newTop < 0) newTop = 0;\n        else if (newTop + spiderRect.height > wallClientHeight) newTop = wallClientHeight - spiderRect.height;\n        spider.style.position = \"absolute\";\n        spider.style.left = \"\".concat(newLeft, \"px\");\n        spider.style.top = \"\".concat(newTop, \"px\");\n    });\n});\n\n//# sourceMappingURL=index.57aa359f.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const wall = document.querySelector('.wall');\n  const spider = document.querySelector('.spider');\n\n  wall.addEventListener('click', (e) => {\n    const wallRect = wall.getBoundingClientRect();\n    const spiderRect = spider.getBoundingClientRect();\n\n    const wallClientWidth = wall.clientWidth;\n    const wallClientHeight = wall.clientHeight;\n    console.log(wallClientWidth, wallClientHeight);\n    let newLeft = e.clientX - wallRect.left - spiderRect.width / 2;\n    let newTop = e.clientY - wallRect.top - spiderRect.height / 2;\n\n    // Check boundaries for left and right\n    if (newLeft < 0) {\n      newLeft = 0;\n    } else if (newLeft + spiderRect.width > wallClientWidth) {\n      newLeft = wallClientWidth - spiderRect.width;\n    }\n\n    // Check boundaries for top and bottom\n    if (newTop < 0) {\n      newTop = 0;\n    } else if (newTop + spiderRect.height > wallClientHeight) {\n      newTop = wallClientHeight - spiderRect.height;\n    }\n\n    spider.style.position = 'absolute';\n    spider.style.left = `${newLeft}px`;\n    spider.style.top = `${newTop}px`;\n  });\n});\n"],"names":["document","addEventListener","wall","querySelector","spider","e","wallRect","getBoundingClientRect","spiderRect","wallClientWidth","clientWidth","wallClientHeight","clientHeight","console","log","newLeft","clientX","left","width","newTop","clientY","top","height","style","position","concat"],"version":3,"file":"index.57aa359f.js.map"}